{"version":3,"sources":["containers/useVisibilityToggle.js","components/header/info/Info.js","components/header/settings/PomodoroSettings.js","components/header/settings/Settings.js","assets/images/lotus.png","components/header/Header.js","components/stop-box/StopBox.js","components/timer-input/TimerInput.js","components/timer-display/TimerDisplay.js","assets/music/short1.mp3","assets/music/long1.mp3","containers/Player.js","components/timer-buttons/TimerButtons.js","components/main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["useVisibilityToggle","component","visibility","useState","visible","setVisibility","v","Info","id","className","PomodoroSettings","type","name","disabled","htmlFor","Settings","isDarkMode","setIsDarkMode","isPlayingMusic","setIsPlayingMusic","isBreakAlert","setIsBreakAlert","isAutoBreak","setIsAutoBreak","isAutoPomo","setIsAutoPomo","isStandardWorkday","setIsStandardWorkday","buttonHandler","e","setButtonState","buttonState","preventDefault","action","aria-labelledby","role","aria-checked","onClick","Header","InfoComponent","toggleInfoVisibility","SettingsComponent","toggleSettingsVisibility","toggleInfoAndSettings","href","src","logo","alt","size","StopBox","TimerInput","setHrs","hrs","setMins","mins","setSecs","secs","toggle","setHealthyBreak","setNewTimer","minsAndSecsRegex","onSubmit","parseInt","alert","placeholder","onChange","target","value","match","TimerDisplay","hours","minutes","seconds","Player","isOnBreak","setIsOnBreak","setIsActive","breakLengthShort","breakLengthLong","audioEl","useRef","isMuted","setIsMuted","shortAudio1","audioFile","setAudioFile","setSeconds","duration2","useEffect","current","duration","console","log","fetch","then","play","catch","error","longAudio1","interval","setInterval","clearInterval","audioEnd","muted","ref","onEnded","TimerButtons","isActive","reset","Main","toggleInput","setToggleInput","newTimer","healthyBreak","breakType","setBreakType","longBreakInterval","pomoLength","toggleInputAndDisplay","toggleInputVisibility","toggleDisplayVisibility","StopBoxComponent","InputComponent","DisplayComponent","newHrs","newMins","newSecs","counter","App","Date","getHours","clockHr","setClockHr","getMinutes","clockMin","setClockMin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2402b0c7.chunk.js","sourcesContent":["\r\n\r\nimport { useState } from 'react';\r\n\r\nconst useVisibilityToggle = (component, visibility = false) => {\r\n  const   [visible, setVisibility] = useState(()=> visibility);\r\n\r\n  return [\r\n    visible ? component : null,\r\n    () => setVisibility(v => !v)\r\n  ];\r\n}\r\n\r\nexport default useVisibilityToggle;","\r\n\r\nimport './Info.css';\r\n\r\nfunction Info() {\r\n  \r\n  return (\r\n    <section id=\"info\" className=\"popUp\">\r\n      <p>there are 2 rules everyone who stares at a computer all day should know</p>\r\n      <ul>\r\n        <li>1) Every 20 mins take a 20 second break to look at somewhere 20 feet away</li>\r\n        <li>2) Every hour of sitting, stand up and take a 2 minute walk</li>\r\n      </ul>\r\n      <p>these tips will help reduce eye strain, eye fatigue, headaches caused by strain and fatigue as well as improve your heart health, overall health and increase longevity. Or so the sources online says</p>\r\n      <p>but it's a pain to set this all up yourself every single time, so this app is here to help you</p>\r\n      <p>it will play music every 20 mins for 20 seconds and at every hour for 2 minutes. This way you can be healthy while sitting in front of a computer all day.</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Info;","\r\nimport { useState } from \"react\";\r\n\r\nconst PomodoroSettings = () => {\r\n\r\n  return(\r\n    <li>\r\n      <p>pomodoro settings</p>\r\n      <ul>\r\n        <li>\r\n          <input type=\"text\" name=\"pomoLength\" id=\"pomoLength\" disabled />\r\n          <label htmlFor=\"pomoLength\">Pomo Length</label>\r\n        </li>\r\n        <li>\r\n          <input type=\"text\" name=\"shortBreakLength\" id=\"shortBreakLength\" disabled />\r\n          <label htmlFor=\"shortBreakLength\">Short Break Length</label>\r\n        </li>\r\n        <li>\r\n          <input type=\"text\" name=\"longBreakLength\" id=\"longBreakLength\" disabled />\r\n          <label htmlFor=\"longBreakLength\">Long Break Length</label>\r\n        </li>\r\n        <li>\r\n          <input type=\"text\" name=\"longBreakInterval\" id=\"longBreakInterval\" disabled />\r\n          <label htmlFor=\"longBreakInterval\">Long Break Interval</label>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\nexport default PomodoroSettings;","\r\n\r\nimport './Settings.css';\r\nimport { useState } from 'react';\r\nimport PomodoroSettings from './PomodoroSettings';\r\n\r\nconst Settings = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n  const [isPlayingMusic, setIsPlayingMusic] = useState(true);\r\n  const [isBreakAlert, setIsBreakAlert] = useState(true);\r\n  const [isAutoBreak, setIsAutoBreak] = useState(true);\r\n  const [isAutoPomo, setIsAutoPomo] = useState(true);\r\n  const [isStandardWorkday, setIsStandardWorkday] = useState(true);\r\n\r\n  const buttonHandler = (e, setButtonState, buttonState) => {\r\n    e.preventDefault();\r\n    setButtonState(!buttonState);\r\n  }\r\n\r\n  return (\r\n    <form action=\"\" id=\"settings\" className=\"popUp\">\r\n      <h3>i am settings</h3>\r\n      <ul>\r\n        <li>\r\n          <label htmlFor=\"dark-mode\">dark mode</label>\r\n          <button \r\n            aria-labelledby=\"dark-mode\" \r\n            role=\"switch\" aria-checked=\"true\" \r\n            onClick={e => buttonHandler(e, setIsDarkMode, isDarkMode)}\r\n          >\r\n            <span>on</span>\r\n            <span>off</span>\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"break-music\">play music on break</label>\r\n          <button \r\n            aria-labelledby=\"break-music\" \r\n            role=\"switch\" \r\n            aria-checked=\"true\" \r\n            onClick={e => buttonHandler(e, setIsPlayingMusic, isPlayingMusic)}\r\n          >\r\n            <span>on</span>\r\n            <span>off</span>\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"break-alert\">alert on break</label>\r\n          <button \r\n            aria-labelledby=\"break-alert\" \r\n            role=\"switch\" \r\n            aria-checked=\"false\" \r\n            onClick={e => buttonHandler(e, setIsBreakAlert, isBreakAlert)}\r\n          >\r\n            <span>on</span>\r\n            <span>off</span>\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"autostart-break\">autostart break</label>\r\n          <button \r\n            aria-labelledby=\"autostart-break\" \r\n            role=\"switch\" \r\n            aria-checked=\"true\" \r\n            onClick={e => buttonHandler(e, setIsAutoBreak, isAutoBreak)}\r\n          >\r\n            <span>on</span>\r\n            <span>off</span>\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"autostart-pomo\">autostart pomo</label>\r\n          <button \r\n            aria-labelledby=\"autostart-pomo\" \r\n            role=\"switch\" \r\n            aria-checked=\"true\" \r\n            onClick={e => buttonHandler(e, setIsAutoPomo, isAutoPomo)}\r\n          >\r\n            <span>on</span>\r\n            <span>off</span>\r\n          </button>\r\n        </li>\r\n        <PomodoroSettings />\r\n        <li>\r\n          <button \r\n            aria-labelledby=\"autostart-pomo\" \r\n            role=\"switch\" \r\n            aria-checked=\"true\" \r\n            onClick={e => buttonHandler(e, setIsStandardWorkday, isStandardWorkday)}\r\n          >\r\n            {isStandardWorkday ? \"workday = pomos + break\" : \"workday = pomo only\"}\r\n          </button>\r\n        </li>\r\n      </ul>\r\n\r\n      <button type=\"submit\" onClick={e => e.preventDefault()}>ok</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/lotus.32aa20ad.png\";","\r\n\r\nimport useVisibilityToggle from '../../containers/useVisibilityToggle';\r\n\r\nimport Info from './info/Info';\r\nimport Settings from './settings/Settings';\r\n\r\nimport './Header.css';\r\nimport logo from '../../assets/images/lotus.png';\r\nimport { LightBulbIcon, GearIcon } from '@primer/octicons-react';\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const [InfoComponent, toggleInfoVisibility] = useVisibilityToggle(\r\n    <Info />\r\n  );\r\n\r\n  const [SettingsComponent, toggleSettingsVisibility] = useVisibilityToggle(\r\n    <Settings />\r\n  );\r\n\r\n  const toggleInfoAndSettings = () => {\r\n    toggleInfoVisibility();\r\n    toggleSettingsVisibility();\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <h1>\r\n        <a href=\".\" className=\"logo\">\r\n          <img src={logo} alt=\"lotus logo\" />\r\n          healthpomo\r\n        </a>\r\n      </h1>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <button className=\"infoBtn\" name=\"infoBtn\" onClick={\r\n              SettingsComponent ? toggleInfoAndSettings : toggleInfoVisibility\r\n            }>\r\n              <LightBulbIcon size={16} />\r\n              {/* info */}\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button className=\"settingsBtn\" name=\"settingsBtn\" onClick={\r\n              InfoComponent ? toggleInfoAndSettings : toggleSettingsVisibility\r\n            }>\r\n              <GearIcon size={16} />\r\n              {/* settings */}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      {InfoComponent}\r\n      {SettingsComponent}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","\r\n\r\nconst StopBox = () => {\r\n\r\n\r\n  return (\r\n    <section id=\"settings\" className=\"popUp\">\r\n      <p>are you sure you want to reset timer</p>\r\n      <button>yes</button>\r\n      <button>no</button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default StopBox;","import './TimerInput.css';\r\n\r\n\r\nfunction TimerInput({setHrs, hrs, setMins, mins, setSecs, secs, toggle, setHealthyBreak, setNewTimer}) {\r\n\r\n  const hrsRegex = \"^(1[0-6]|[1-9])$\";\r\n  const minsAndSecsRegex = \"^[0-5]?[0-9]$\";\r\n  const handleHrs = (e) => {\r\n    if (e.target.value.match(hrsRegex)) {\r\n      setHrs(parseInt(e.target.value));\r\n    }\r\n    if (e.target.value === '') {\r\n      setHrs('0');\r\n    }\r\n  }\r\n\r\n  const handleMins = (e) => {\r\n    if (e.target.value.match(minsAndSecsRegex)) {\r\n      setMins(parseInt(e.target.value));\r\n    }\r\n    else if (e.target.value === '') {\r\n      setMins('0');\r\n    }\r\n  }\r\n\r\n  const handleSecs = (e) => {\r\n    if (e.target.value.match(minsAndSecsRegex)) {\r\n      setSecs(parseInt(e.target.value));\r\n    }\r\n    else if (e.target.value === '') {\r\n      setSecs('0');\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (parseInt(hrs) * 3600 + parseInt(mins) * 60 + parseInt(secs) === 0) {\r\n      return alert(\"please enter a time\");\r\n    }\r\n    toggle();\r\n    setHealthyBreak(parseInt(hrs)*3600 + parseInt(mins)*60 + parseInt(secs));\r\n    setNewTimer(true);\r\n  }\r\n\r\n  return (\r\n    <form className=\"timerInputBox\" onSubmit={handleSubmit}>\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          name=\"timerHr\" \r\n          className=\"timerInput\" \r\n          id=\"timerHr\" \r\n          placeholder='0'\r\n          onChange={handleHrs} \r\n          value={hrs === '0' ? '' : hrs}\r\n        />\r\n        <label htmlFor=\"timerHr\">h</label>\r\n      </div>\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          name=\"timerMin\" \r\n          className=\"timerInput\" \r\n          id=\"timerMin\" \r\n          placeholder='0' \r\n          onChange={handleMins}\r\n          value={mins === '0' ? '' : mins}\r\n        />\r\n        <label htmlFor=\"timerMin\">m</label>\r\n      </div>\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          name=\"timerSec\" \r\n          className=\"timerInput\" \r\n          id=\"timerSec\" \r\n          placeholder='0' \r\n          onChange={handleSecs}\r\n          value={secs === '0' ? '' : secs}\r\n        />\r\n        <label htmlFor=\"timerSec\">s</label>\r\n      </div>\r\n      <button type=\"submit\">set workday</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TimerInput;","\r\nfunction TimerDisplay({hrs, mins, secs}) {\r\n\r\n  let hours = parseInt(hrs);\r\n  let minutes = parseInt(mins);\r\n  let seconds = parseInt(secs);\r\n\r\n  if (hours < 10) {\r\n    hours = '0' + hrs;\r\n  }\r\n  if (minutes < 10) {\r\n    minutes = '0' + mins;\r\n  }\r\n  if (seconds < 10) {\r\n    seconds = '0' + secs;\r\n  }\r\n\r\n  return (\r\n    <p>{`${hours}:${minutes}:${seconds}`}</p>\r\n  );\r\n}\r\n\r\nexport default TimerDisplay;","export default __webpack_public_path__ + \"static/media/short1.1ffe718a.mp3\";","export default __webpack_public_path__ + \"static/media/long1.bb10ad67.mp3\";","import React, {useState, useRef, useEffect} from 'react';\r\nimport shortAudio1 from '../assets/music/short1.mp3';\r\nimport longAudio1 from '../assets/music/long1.mp3';\r\n\r\nconst Player = ({ type, isOnBreak, setIsOnBreak, setIsActive, breakLengthShort, breakLengthLong}) => {\r\n\r\n  const audioEl = useRef(null);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [audioFile, setAudioFile] = useState(shortAudio1);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  // const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const fetchVideoAndPlay = () => {\r\n    if (isOnBreak && type === 'short') {\r\n      console.log('short audio and break is true')\r\n      fetch(shortAudio1)\r\n      .then(() => {\r\n        setAudioFile(shortAudio1);\r\n      })\r\n      .then(()=> {\r\n        // setIsPlaying(true);\r\n        return audioEl.current.play();\r\n      })\r\n      .catch(error => {\r\n        alert(\"this is the short audio error: \", error)\r\n      })\r\n    } else if (isOnBreak && type === 'long') {\r\n      console.log('long audio and break is true')\r\n      fetch(longAudio1)\r\n      .then(() => {\r\n        setAudioFile(longAudio1);\r\n      })\r\n      .then(() => {\r\n        // setIsPlaying(true);\r\n        return audioEl.current.play();\r\n      })\r\n      .catch(error => {\r\n        alert(\"this is the long audio error: \", error)\r\n      })\r\n    } else {\r\n      alert('short and long audio is false')\r\n    }\r\n  }\r\n\r\n  // useEffect(()=> {\r\n  //   fetchVideoAndPlay();\r\n  //   setIsPlaying(!isPlaying);\r\n  //   console.log('break is changing')\r\n  // }, [isOnBreak])\r\nlet duration2 = 0;\r\n  useEffect(() => {\r\n    // setDuration(audioEl.current.duration);\r\n    duration2 = audioEl.current.duration\r\n    console.log(\"before fetch vid and play. type: \", type, \" Is on break: \", isOnBreak, \"audioel.current: \", audioEl.current.duration, \"duration: \", duration2)\r\n    fetchVideoAndPlay();\r\n    console.log(\"after fetch vid and play but before interval. type: \", type, \" Is on break: \", isOnBreak, \"audioel.current: \", audioEl.current.duration, \"duration: \", duration2)\r\n\r\n    const interval = setInterval(() => {\r\n      setSeconds(seconds => seconds + 1);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n\r\n  }, [isOnBreak]);\r\n\r\n  // const audioDuration = new Promise((resolve, reject) => {\r\n  //   audioEl.current.duration ? resolve('audio duration found') : reject('no duration for audio')\r\n  // });\r\n\r\n  // audioDuration\r\n  //   .then(message => {\r\n  //     setDuration(Math.floor(audioEl.current.duration));\r\n  //     // setIsPlaying(true);\r\n  //     console.log('this is the then ' + message);\r\n  //   })\r\n  //   // error occuring here x6\r\n  //   .catch(errMessage => console.log('this is the duration error: ' + errMessage))\r\n\r\n  const audioEnd = () =>{\r\n    setIsOnBreak(false)\r\n    setIsActive(true);\r\n    setIsMuted(false);\r\n    // setIsPlaying(false);\r\n  }\r\n\r\n  return (\r\n    <section className=\"musicPlayer\">\r\n      \r\n      <button onClick={()=>{setIsMuted(!isMuted)}}>mute</button>\r\n      {isMuted \r\n        ? <audio muted src={audioFile} ref={audioEl} onEnded={audioEnd}></audio>\r\n        : <audio src={audioFile} ref={audioEl} onEnded={audioEnd}></audio>\r\n      }\r\n\r\n      {type === 'short'\r\n        ? <h4>time to relax your eyes </h4> \r\n        : <h4>time to go for a walk</h4>\r\n      }\r\n\r\n\r\n      {/* <p>{duration2 - seconds} secs of breaktime left</p> */}\r\n      <p>\r\n        {type === 'short' \r\n          ? breakLengthShort - seconds \r\n          : breakLengthLong - seconds\r\n        } secs of breaktime left\r\n      </p>\r\n      \r\n      {/* <p>{seconds}</p> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Player\r\n\r\n","\r\n\r\n\r\nconst TimerButtons = ({isActive, setIsActive, reset}) => (\r\n  <div>\r\n    <button onClick={() => setIsActive(!isActive)}>\r\n      {isActive ? 'pause' : 'play'}\r\n    </button>\r\n    <button onClick={reset}>stop</button>\r\n  </div>\r\n)\r\n\r\nexport default TimerButtons;","import { useEffect, useState } from 'react';\r\n\r\nimport useVisibilityToggle from '../../containers/useVisibilityToggle';\r\nimport StopBox from '../stop-box/StopBox';\r\nimport TimerInput from '../timer-input/TimerInput';\r\nimport TimerDisplay from '../timer-display/TimerDisplay';\r\nimport Player from '../../containers/Player';\r\nimport TimerButtons from '../timer-buttons/TimerButtons';\r\n\r\nimport './Main.css';\r\n\r\n\r\n\r\n\r\nconst Main = () => {\r\n  const [toggleInput, setToggleInput] = useState(false);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [newTimer, setNewTimer] = useState(false);\r\n\r\n  const [hrs, setHrs] = useState('0');\r\n  const [mins, setMins] = useState('0');\r\n  const [secs, setSecs] = useState('0');\r\n\r\n  const [healthyBreak, setHealthyBreak] = useState(0);\r\n  const [isOnBreak, setIsOnBreak] = useState(false);\r\n  const [breakType, setBreakType] = useState('');\r\n\r\n  const [breakLengthShort, setbreakLengthShort] = useState(20);\r\n  const [breakLengthLong, setbreakLengthLong] = useState(120);\r\n  const [longBreakInterval, setLongBreakInterval] = useState(3);\r\n  const [pomoLength, setPomoLength] = useState(1200);\r\n\r\n\r\n  const toggleInputAndDisplay = () => {\r\n    toggleInputVisibility();\r\n    toggleDisplayVisibility();\r\n  }\r\n\r\n  const addWorkdayToggle = () => {\r\n    toggleInputAndDisplay();\r\n    setToggleInput(true);\r\n  }\r\n\r\n  const reset = () => {\r\n    setSecs(0);\r\n    setMins(0);\r\n    setHrs(0);\r\n    setIsActive(false);\r\n    setToggleInput(false);\r\n  }\r\n\r\n  const [StopBoxComponent, toggleStopBoxVisibility] = useVisibilityToggle(\r\n    <StopBox />\r\n  );\r\n\r\n  const [InputComponent, toggleInputVisibility] = useVisibilityToggle(\r\n    <TimerInput \r\n      hrs={hrs}\r\n      setHrs={setHrs}\r\n      mins={mins}\r\n      setMins={setMins}\r\n      secs={secs}\r\n      setSecs={setSecs}\r\n      toggle={toggleInputAndDisplay}\r\n      setHealthyBreak={setHealthyBreak}\r\n      setNewTimer={setNewTimer}\r\n    />\r\n  );\r\n\r\n  const [DisplayComponent, toggleDisplayVisibility] = useVisibilityToggle(\r\n    <TimerDisplay \r\n      hrs={hrs}\r\n      mins={mins}\r\n      secs={secs}\r\n    />,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    let newHrs = parseInt(hrs);\r\n    let newMins = parseInt(mins);\r\n    let newSecs = parseInt(secs);\r\n    let counter = newSecs + (newMins * 60) + (newHrs * 3600) - 1;\r\n\r\n    let interval = null;\r\n\r\n    if (isActive) {\r\n      interval = setInterval(()=>{\r\n        if ((healthyBreak - counter) % (pomoLength * longBreakInterval) === 0 && counter > ((pomoLength * longBreakInterval) * 1.5)) {\r\n          // break every hour and counter is bigger than 1h 30mins\r\n          console.log((pomoLength * longBreakInterval) * 1.5, counter);\r\n          setBreakType('long');\r\n          setIsActive(!isActive);\r\n          setIsOnBreak(true);\r\n        } else if ((healthyBreak - counter) % pomoLength === 0 && counter > (pomoLength * 1.5)) {\r\n          // break every 20mins and counter is bigger than 30mins\r\n          setBreakType('short');\r\n          setIsActive(!isActive);\r\n          setIsOnBreak(true);\r\n        }\r\n        // clear interval when timer reaches zero\r\n        if (newSecs + newMins + newHrs === 0) {\r\n          setIsActive(!isActive);\r\n          setToggleInput(false);\r\n          setNewTimer(false);\r\n        } else if (newSecs > 0) {\r\n          newSecs--;\r\n          setSecs(newSecs);\r\n        } else {\r\n          // new seconds === 0 and newMins > 0\r\n          if (newMins > 0) {\r\n            newMins--;\r\n            setMins(newMins);\r\n            newSecs = 59;\r\n            setSecs(newSecs);\r\n          } else {\r\n            // if newMins === 0 and newHrs > 0\r\n            if (newHrs > 0) {\r\n              newHrs--;\r\n              setHrs(newHrs);\r\n              newMins = 59;\r\n              newSecs = 59;\r\n              setMins(newMins);\r\n              setSecs(newSecs);\r\n            }\r\n          }\r\n        } \r\n      }, 1000)\r\n    } else if (!isActive && !(newSecs + newMins + newHrs === 0)) {\r\n      // when pause is clicked, stop interval\r\n      clearInterval(interval);\r\n    } \r\n    return () => clearInterval(interval);\r\n  }, [hrs, mins, secs, isActive, isOnBreak, healthyBreak]);\r\n\r\n  return (\r\n    <main>\r\n      {DisplayComponent}\r\n      {InputComponent}\r\n\r\n      {/* play/stop replaces set workday button */}\r\n      {toggleInput ? null : <button onClick={addWorkdayToggle}>add workday</button>}\r\n\r\n      <p></p>\r\n\r\n      {isOnBreak\r\n        ? <Player\r\n          isOnBreak={isOnBreak}\r\n          setIsOnBreak={setIsOnBreak}\r\n          type={breakType}\r\n          setIsActive={setIsActive}\r\n          breakLengthShort={breakLengthShort}\r\n          breakLengthLong={breakLengthLong}\r\n        />\r\n        : null\r\n      }\r\n\r\n      {!isOnBreak && newTimer\r\n        ? <TimerButtons\r\n          isActive={isActive}\r\n          setIsActive={setIsActive}\r\n          reset={reset}\r\n        />\r\n        : null\r\n      }\r\n\r\n      {StopBoxComponent}\r\n\r\n      {/* music player popup when timer ends*/}\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport './App.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n  const [clockHr, setClockHr] = useState(new Date().getHours());\r\n  const [clockMin, setClockMin] = useState(new Date().getMinutes());\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    interval = setInterval(() =>{\r\n      if (new Date().getHours() < 10) {\r\n        setClockHr(`0${new Date().getHours()}`);\r\n      } else {\r\n        setClockHr(new Date().getHours());\r\n      }\r\n\r\n      if (new Date().getMinutes() < 10) {\r\n        setClockMin(`0${new Date().getMinutes()}`);\r\n      } else {\r\n        setClockMin(new Date().getMinutes());\r\n      }\r\n\r\n    }, 1000)\r\n    return (()=> clearInterval(interval))\r\n  }, [clockMin, clockHr])\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n      <aside>\r\n        <p className=\"time\">{`${clockHr}:${clockMin}`}</p>\r\n      </aside>\r\n      <footer>\r\n        <p>&copy; 2021 <a href=\"http://cecilezhang.com\">xixi</a></p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}