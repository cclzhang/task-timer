{"version":3,"sources":["containers/useVisibilityToggle.js","components/info/Info.js","components/settings/Settings.js","components/header/Header.js","components/main/Main.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["useVisibilityToggle","component","visibility","useState","visible","setVisibility","v","Info","id","className","Settings","Header","InfoComponent","toggleInfoVisibility","SettingsComponent","toggleSettingsVisibility","href","name","onClick","today","Date","currentTime","toLocaleTimeString","console","log","Main","type","placeholder","htmlFor","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAaeA,EATa,SAACC,GAAmC,IAAxBC,EAAuB,wDAC7D,EAAmCC,oBAAS,kBAAKD,KAAjD,mBAASE,EAAT,KAAkBC,EAAlB,KAEA,MAAO,CACLD,EAAUH,EAAY,KACtB,kBAAMI,GAAc,SAAAC,GAAC,OAAKA,Q,eCYfC,MAjBf,WAGE,OACE,0BAASC,GAAG,OAAOC,UAAU,QAA7B,UACE,wGACA,+BACE,2GACA,gGAEF,uOACA,+HACA,+LCFSC,G,MAVE,WAGf,OACE,yBAASF,GAAG,WAAWC,UAAU,QAAjC,SACE,kDC8BSE,G,MA3BA,WAEb,MAA8CX,EAC5C,cAAC,EAAD,KADF,mBAAOY,EAAP,KAAsBC,EAAtB,KAIA,EAAsDb,EACpD,cAAC,EAAD,KADF,mBAAOc,EAAP,KAA0BC,EAA1B,KAQA,OACE,mCACE,mBAAGC,KAAK,IAAIP,UAAU,OAAtB,kBACA,gCACE,wBAAQA,UAAU,UAAUQ,KAAK,UAAUC,QAASL,EAApD,eACA,wBAAQJ,UAAU,cAAcQ,KAAK,cAAcC,QAASH,EAA5D,kBAEDH,EACAE,OCxBDK,G,MAAQ,IAAIC,MACdC,EAAcF,EAAMG,mBAAmB,SAC3CC,QAAQC,IAAIL,EAAMG,mBAAmB,UACrCC,QAAQC,IAAIL,EAAMG,sBAkCHG,MAhCf,WAGE,OACE,iCACE,8BACE,2CAIF,uBAAOC,KAAK,OAAOT,KAAK,QAAQT,GAAG,QAASmB,YAAY,aACxD,uBAAOC,QAAQ,QAAf,wBACA,sBAGA,iDACA,sBACA,0CACA,0CAGA,8BACE,+CAKF,mBAAGnB,UAAU,OAAb,SAAqBY,Q,MC9BZQ,MARf,WACE,OACE,iCACE,2CAAe,mBAAGb,KAAK,yBAAR,wB,MCSNc,MAVf,WACE,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a50816dd.chunk.js","sourcesContent":["\r\n\r\nimport { useState } from 'react';\r\n\r\nconst useVisibilityToggle = (component, visibility = false) => {\r\n  const   [visible, setVisibility] = useState(()=> visibility);\r\n\r\n  return [\r\n    visible ? component : null,\r\n    () => setVisibility(v => !v)\r\n  ];\r\n}\r\n\r\nexport default useVisibilityToggle;","\r\n\r\nimport './Info.css';\r\n\r\nfunction Info() {\r\n  \r\n\r\n  return (\r\n    <section id=\"info\" className=\"popUp\">\r\n      <p>there are 2 rules everyone who stares at a computer all day should know</p>\r\n      <ul>\r\n        <li>1) Every 20 mins take a 20 second break to look at somewhere 20 feet away</li>\r\n        <li>2) Every hour of sitting, stand up and take a 2 minute walk</li>\r\n      </ul>\r\n      <p>these tips will help reduce eye strain, eye fatigue, headaches caused by strain and fatigue as well as improve your heart health, overall health and increase longevity. Or so the sources online says</p>\r\n      <p>but it's a pain to set this all up yourself every single time, so this app is here to help you</p>\r\n      <p>it will play music every 20 mins for 20 seconds and at every hour for 2 minutes. This way you can be healthy while sitting in front of a computer all day.</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Info;","\r\n\r\nimport './Settings.css';\r\n\r\nconst Settings = () => {\r\n\r\n\r\n  return (\r\n    <section id=\"settings\" className=\"popUp\">\r\n      <p>i am settings</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Settings;","\r\n\r\n// import { useRef } from 'react';\r\nimport useVisibilityToggle from '../../containers/useVisibilityToggle';\r\n\r\nimport Info from '../info/Info';\r\nimport Settings from '../settings/Settings';\r\n\r\nimport './Header.css';\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const [InfoComponent, toggleInfoVisibility] = useVisibilityToggle(\r\n    <Info />\r\n  );\r\n\r\n  const [SettingsComponent, toggleSettingsVisibility] = useVisibilityToggle(\r\n    <Settings />\r\n  );\r\n\r\n  // const componentRef = useRef();\r\n  \r\n  // console.log(componentRef.current);\r\n\r\n  return (\r\n    <header>\r\n      <a href=\".\" className=\"logo\">logo</a>\r\n      <div>\r\n        <button className=\"infoBtn\" name=\"infoBtn\" onClick={toggleInfoVisibility}>i</button>\r\n        <button className=\"settingsBtn\" name=\"settingsBtn\" onClick={toggleSettingsVisibility}>s</button>\r\n      </div>\r\n      {InfoComponent}\r\n      {SettingsComponent}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","\r\n\r\n// import Display from './Display';\r\n// import SetTimer from './SetTimer';\r\n\r\n// import React, { useRef } from 'react';\r\n// import Info from '../info/Info';\r\nimport './Main.css';\r\n\r\n\r\nconst today = new Date();\r\nlet currentTime = today.toLocaleTimeString('en-GB');\r\nconsole.log(today.toLocaleTimeString('en-GB'));\r\nconsole.log(today.toLocaleTimeString());\r\n\r\nfunction Main() {\r\n\r\n\r\n  return (\r\n    <main>\r\n      <div>\r\n        <p>00:00:00</p>\r\n      </div>\r\n\r\n      {/* input replaces div */}\r\n      <input type=\"text\" name=\"timer\" id=\"timer\"  placeholder=\"00:00:00\" />\r\n      <label htmlFor=\"timer\">enter time</label>\r\n      <p></p>\r\n\r\n      {/* play/stop replaces set workday button */}\r\n      <button>set workday</button>\r\n      <p></p>\r\n      <button>play</button>\r\n      <button>stop</button>\r\n\r\n      {/* music player popup when timer ends*/}\r\n      <div>\r\n        <p>music player</p>\r\n      </div>\r\n\r\n      {/* <Info /> */}\r\n\r\n      <p className=\"time\">{currentTime}</p>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","\r\n\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <p>&copy; 2021 <a href=\"http://cecilezhang.com\">xixi</a></p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Footer from './components/footer/Footer';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}